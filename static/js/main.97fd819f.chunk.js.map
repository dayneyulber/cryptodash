{"version":3,"sources":["App/AppLayout.js","App/AppProvider.js","App/AppBar.js","Settings/WelcomeMessage.js","Shared/Styles.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Shared/Content.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/CoinSpotlight.js","Dashboard/HighchartsConfig.js","Dashboard/HighchartsTheme.js","Dashboard/ChartSelect.js","Dashboard/PriceChart.js","Dashboard/index.js","App/index.js","serviceWorker.js","index.js"],"names":["styled","div","cc","require","AppContext","React","createContext","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","a","coinList","Data","setState","state","firstVisit","prices","filter","price","Object","keys","length","historical","results","console","log","name","currentFavorite","data","map","ticker","index","moment","subtract","timeInterval","valueOf","USD","returnData","i","favorites","priceFull","priceData","push","warn","promises","units","priceHistorical","toDate","Promise","all","addCoin","key","removeCoin","_","pull","isInFavorites","includes","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","cryptoDashData","Provider","this","children","Component","Logo","Bar","ControlButtonElem","active","css","hidden","ControlButton","Consumer","lower","onClick","charAt","toUpperCase","substr","lightBlueBackground","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","CenterDiv","Tile","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinSymbol","DeleteIcon","symbol","topSection","CoinImage","img","spotlight","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","TileClass","CoinHeaderGrid","CoinName","Symbol","CoinGridStyled","getCoinsToDisplay","filterCoins","slice","getLowerSectionCoins","CoinTile","SearchGrid","SearchInput","input","handleFilter","debounce","inputValue","setFilterCoins","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","onKeyUp","e","target","Page","WelcomeMessage","CoinGrid","ConfirmButton","Search","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercent","CHANGEPCT24HOUR","PriceTile","PRICE","PriceTileCompact","PriceGrid","SpotlightName","h2","title","text","yAxis","xAxis","type","accessibility","rangeDescription","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","colors","chart","backgroundColor","borderColor","borderWidth","className","plotBackgroundColor","plotBorderWidth","style","color","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","ReactHighcharts","Highcharts","setOptions","HighchartsTheme","ChartSelect","defaultValue","onChange","config","highchartsConfig","ChartGrid","CoinSpotlight","PriceChart","App","AppLayout","AppBar","Content","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.97fd819f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\npadding: 40px;\n`","import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nconst cc = require('cryptocompare');\n\nexport const AppContext = React.createContext();\n\nconst MAX_FAVORITES = 10;\nconst TIME_UNITS = 10;\n\nexport class AppProvider extends React.Component {\n         constructor(props) {\n           super(props);\n           this.state = {\n             page: \"dashboard\",\n             favorites: [\"BTC\", \"ETH\", \"XMR\", \"DOGE\"],\n             timeInterval: 'months',\n             ...this.savedSettings(),\n             setPage: this.setPage,\n             addCoin: this.addCoin,\n             removeCoin: this.removeCoin,\n             isInFavorites: this.isInFavorites,\n             confirmFavorites: this.confirmFavorites,\n             setCurrentFavorite: this.setCurrentFavorite,\n             setFilteredCoins: this.setFilteredCoins,\n             changeChartSelect: this.changeChartSelect\n           };\n         }\n\n         componentDidMount = () => {\n           this.fetchCoins();\n           this.fetchPrices();\n           this.fetchHistorical();\n         };\n\n         fetchCoins = async () => {\n           let coinList = (await cc.coinList()).Data;\n           this.setState({ coinList });\n         }\n\n         fetchPrices = async () => {\n           if (this.state.firstVisit) return;\n           let prices = await this.prices();\n           // We must filter the empty price objects (not in the lecture)\n           prices = prices.filter(price => Object.keys(price).length);\n           this.setState({ prices });\n         };\n\n         fetchHistorical = async () => {\n           if (this.state.firstVisit) return;\n           let results = await this.historical();\n           console.log('results', results);\n           let historical = [\n             {\n               name: this.state.currentFavorite,\n               data: results.map((ticker, index) => [\n                 moment().subtract({[this.state.timeInterval]: TIME_UNITS - index}).valueOf(),\n                 ticker.USD\n               ])\n             }\n           ]\n           this.setState({historical});\n         };\n\n         prices = async () => {\n           let returnData = [];\n           for (let i = 0; i < this.state.favorites.length; i++) {\n             try {\n               let priceData = await cc.priceFull(\n                 this.state.favorites[i],\n                 \"USD\"\n               );\n               returnData.push(priceData);\n             } catch (e) {\n               console.warn(\"Fetch price error: \", e);\n             }\n           }\n           return returnData;\n         };\n\n         historical = () => {\n           let promises = [];\n           for (let units = TIME_UNITS; units > 0; units--){\n             promises.push(\n               cc.priceHistorical(\n                 this.state.currentFavorite,\n                 ['USD'],\n                 moment()\n                   .subtract({[this.state.timeInterval]: units})\n                   .toDate()\n               )\n             );\n           }\n           return Promise.all(promises);\n         }\n\n         addCoin = key => {\n           let favorites = [...this.state.favorites];\n           if (favorites.length < MAX_FAVORITES) {\n             favorites.push(key);\n             this.setState({ favorites });\n           }\n         };\n\n         removeCoin = key => {\n           let favorites = [...this.state.favorites];\n           this.setState({ favorites: _.pull(favorites, key) });\n         };\n\n         isInFavorites = key => _.includes(this.state.favorites, key);\n\n         confirmFavorites = () => {\n           let currentFavorite = this.state.favorites[0];\n           this.setState(\n             {\n               firstVisit: false,\n               page: \"dashboard\",\n               currentFavorite,\n               prices: null,\n               historical: null\n             },\n             () => {\n               this.fetchPrices();\n               this.fetchHistorical();\n             }\n           );\n           localStorage.setItem(\n             \"cryptoDash\",\n             JSON.stringify({\n               favorites: this.state.favorites,\n               currentFavorite\n             })\n           );\n         };\n\n         setCurrentFavorite = (sym) => {\n           this.setState({\n             currentFavorite: sym,\n             historical: null\n           }, this.fetchHistorical);\n           localStorage.setItem(\n             \"cryptoDash\",\n             JSON.stringify({\n               ...JSON.parse(localStorage.getItem(\"cryptoDash\")),\n               currentFavorite: sym\n             })\n           );\n         };\n\n         savedSettings() {\n           let cryptoDashData = JSON.parse(localStorage.getItem(\"cryptoDash\"));\n           if (!cryptoDashData) {\n             return { page: \"settings\", firstVisit: true };\n           }\n           let { favorites, currentFavorite } = cryptoDashData;\n           return { favorites, currentFavorite };\n         }\n\n         setPage = page => this.setState({ page });\n\n         setFilteredCoins = filteredCoins => this.setState({ filteredCoins });\n\n         changeChartSelect = (value) => {\n          this.setState({timeInterval: value, historical:null}, this.fetchHistorical);\n         }\n\n         render() {\n           return (\n             <AppContext.Provider value={this.state}>\n               {this.props.children}\n             </AppContext.Provider>\n           );\n         }\n       };","import React from 'react';\nimport styled, {css} from 'styled-components'\nimport {AppContext} from \"./AppProvider\"\n\nconst Logo = styled.div`\nfont-size: 1.5em;\n`\n\nconst Bar = styled.div\n`display: grid;\nmargin-bottom: 40px;\ngrid-template-columns: 180px auto 100px 100px;\n`\n\nconst ControlButtonElem = styled.div`\ncursor: pointer;\n${props => props.active && css`\ntext-shadow: 0px 0px 60px #03ff03;\n`}\n${props => props.hidden && css`\ndisplay: none;\n`}\n`\n\nfunction toProperCase(lower){\n    return lower.charAt(0).toUpperCase() + lower.substr(1);\n}\n\nfunction ControlButton({name}){\n    return (\n      <AppContext.Consumer>\n          {({firstVisit, page, setPage}) => (\n          <ControlButtonElem active={page === name}\n          onClick={()=> setPage(name)}\n          hidden={firstVisit && name === 'dashboard'}\n          >\n          {toProperCase(name)}\n        </ControlButtonElem>\n          )}\n      </AppContext.Consumer>)\n}\n\nexport default function () {\n    return (\n    <Bar>\n        <Logo> Cryptodash </Logo>\n        <div></div>\n        <ControlButton active name = \"dashboard\"/>\n        <ControlButton name = \"settings\" />\n    </Bar>\n    )\n}","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\nexport default function ({firstVisit}) {\n    return (\n      <AppContext.Consumer>\n        {({firstVisit}) => \n          firstVisit ? <div>\n            Welcome to CryptoDash, please select your favorite coins to begin.{' '}\n          </div> : null\n      }\n      </AppContext.Consumer>\n    );\n  };","const theme = 'dark';\n// const theme = 'light';\nexport const lightTheme = theme === 'light';\n\nexport const color = lightTheme ? 'white' : '#061a44';\nexport const color2 = lightTheme ? 'white' : '#010e2c';\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\n\nif (lightTheme) {\n  document.body.style.background = '#e1eaee';\n  document.body.style.color = '#061a44';\n}\n\nexport const lightBlueBackground = `background-color: ${color}`;\nexport const backgroundColor2 = `background-color: ${color2};`;\nexport const greenBackgroundColor = `background-color: ${color3};`;\n\nexport const fontColorGreen = `color: #03A9F4`;\nexport const fontColorWhite = `color: white`;\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\n\nexport const fontSizeBig = 'font-size: 2em';\nexport const fontSize1 = 'font-size: 1.5em;';\nexport const fontSize2 = 'font-size: 1.0em';\nexport const fontSize3 = 'font-size: .75em';\n\nexport const textAlignCenter = 'text-align: center;';","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport {fontSize1, greenBoxShadow, color3} from \"../Shared/Styles\";\n\nconst ConfirmButtonStyled = styled.div`\nmargin: 20px;\ncolor: ${color3};\n${fontSize1};\npadding: 5px;\ncursor: pointer;\n&:hover {\n  ${greenBoxShadow}\n}\n`;\nexport const CenterDiv = styled.div`\ndisplay: grid;\njustify-content: center;\n`;\n\nexport default function () {\n    return <AppContext.Consumer>\n      {({confirmFavorites}) => \n        <CenterDiv>\n          <ConfirmButtonStyled onClick={confirmFavorites}>\n            Confirm Favorites\n          </ConfirmButtonStyled>\n        </CenterDiv>\n      }\n    </AppContext.Consumer>;\n}","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\nexport default function ({name, children}) {\n    return <AppContext.Consumer>\n        {({page}) => {\n            if (page !== name) {\n                return null;\n            }\n            return <div> {children} </div>;\n        }}\n    </AppContext.Consumer>\n}","import styled from 'styled-components';\nimport {subtleBoxShadow, lightBlueBackground, greenBoxShadow, redBoxShadow} from \"./Styles\"\n\nexport const Tile = styled.div`\n${subtleBoxShadow};\n${lightBlueBackground};\npadding: 10px;\n`;\n\nexport const SelectableTile = styled(Tile)`\n&:hover {\n    cursor: pointer;\n    ${greenBoxShadow}\n}\n`;\n\nexport const DeletableTile = styled(SelectableTile)`\n&:hover {\n    cursor: pointer;\n    ${redBoxShadow}\n}\n`;\n\nexport const DisabledTile = styled(Tile)`\n&:hover {\n    pointer-events: none;\n    opacity: 0.4;\n}\n`;","import React from 'react';\nimport styled from \"styled-components\";\nimport {DeletableTile} from \"../Shared/Tile\";\n\nexport const CoinHeaderGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1 fr;\n`;\n\nexport const CoinSymbol = styled.div`\n    justify-self: right;\n`;\n\nconst DeleteIcon = styled.div`\n    justify-self: right;\n    display: none;\n    ${DeletableTile}:hover & {\n        display: block;\n        color: red;\n    }\n`;\n\nexport default function({name, symbol, topSection}){\n    return <CoinHeaderGridStyled>\n        <div> {name} </div>\n        {topSection ? (\n            <DeleteIcon> X </DeleteIcon>\n        ) : (<CoinSymbol> {symbol} </CoinSymbol>)}\n    </CoinHeaderGridStyled>;\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\n\nconst CoinImage = styled.img`\n  height: 50px;\n  ${props =>\n    props.spotlight &&\n    css`\n      height: 200px;\n      margin: auto;\n      display: block;\n    `}\n`;\n\nexport default function({coin, spotlight}) {\n  return (\n    <CoinImage\n      spotlight={spotlight}\n      alt={coin.CoinSymbol}\n      src={`http://cryptocompare.com/${coin.ImageUrl}`}\n    />\n  );\n}\n","import React from 'react';\nimport { AppContext } from \"../App/AppProvider\";\nimport {SelectableTile, DeletableTile, DisabledTile} from \"../Shared/Tile\";\nimport CoinHeaderGrid from './CoinHeaderGrid';\nimport CoinImage from '../Shared/CoinImage';\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin){\n    return topSection ? () => {\n        removeCoin(coinKey)\n    } : () => {\n            addCoin(coinKey)\n        }\n    }\n\nexport default function({coinKey, topSection}){\n    return <AppContext.Consumer>\n        {({coinList, addCoin, removeCoin, isInFavorites}) => {\n            let coin = coinList[coinKey];\n\n            let TileClass = SelectableTile;\n            if (topSection){\n                TileClass = DeletableTile;\n            }else if(isInFavorites(coinKey)){\n                TileClass = DisabledTile;\n            }\n            return <TileClass\n                onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\n            >\n                <CoinHeaderGrid topSection={topSection} \n                name={coin.CoinName} \n                symbol={coin.Symbol}/>\n                <CoinImage coin={coin}/>\n                </TileClass>\n        }}\n    </AppContext.Consumer>\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport CoinTile from \"./CoinTile\";\n\nexport const CoinGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n    grid-gap: 15px;\n    margin-top: 40px;\n`;\nfunction getLowerSectionCoins(coinList, filteredCoins){\n    return (filteredCoins && Object.keys(filteredCoins)) || Object.keys(coinList).slice(0, 100);\n};\n\nfunction getCoinsToDisplay(coinList, topSection, favorites, filterCoins){\n    return topSection ? favorites : getLowerSectionCoins(coinList, filterCoins);\n};\n\nexport default function ({topSection}){\n    return (\n      <AppContext.Consumer>\n        {({ coinList, favorites, filteredCoins }) => (\n          <CoinGridStyled>\n            {getCoinsToDisplay(\n              coinList,\n              topSection,\n              favorites,\n              filteredCoins\n            ).map(coinKey => (\n              <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey} />\n            ))}\n          </CoinGridStyled>\n        )}\n      </AppContext.Consumer>\n    );\n};","import React from 'react';\nimport styled from 'styled-components';\nimport {backgroundColor2, fontSize2} from \"../Shared/Styles\";\nimport {AppContext} from \"../App/AppProvider\";\nimport _ from 'lodash';\nimport fuzzy from 'fuzzy';\n\nconst SearchGrid = styled.div`\ndisplay: grid;\ngrid-template-columns: 200px 1fr;\n`\nconst SearchInput = styled.input`\n${backgroundColor2}\n${fontSize2}\nborder: 1px solid;\nheight: 25px;\ncolor: #1163c9;\nplace-self: center left;\n`\nconst handleFilter = _.debounce((inputValue, coinList, setFilterCoins) => {\n    let coinSymbols = Object.keys(coinList);\n    let coinNames = coinSymbols.map(sym => coinList[sym].CoinName)\n    let allStringsToSearch = coinSymbols.concat(coinNames);\n    let fuzzyResults = fuzzy\n    .filter(inputValue, allStringsToSearch, {})\n    .map(result => result.string);\n\n    let filteredCoins = _.pickBy(coinList, (result, symKey) => {\n        let coinName = result.CoinName;\n        return (_.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName));\n    });\n    setFilterCoins(filteredCoins);\n}, 500);\n\nfunction filterCoins(e, setFilteredCoins, coinList){\n    let inputValue = e.target.value;\n    if(!inputValue){\n        setFilteredCoins(null);\n        return;\n    }\n    handleFilter(inputValue, coinList, setFilteredCoins)\n}\n\nexport default function() {\n  return (\n    <AppContext.Consumer>\n      {({setFilteredCoins, coinList}) => (\n        <SearchGrid>\n          <h2>Search all coins</h2>\n          <SearchInput onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}/>\n        </SearchGrid>\n      )}\n    </AppContext.Consumer>\n  );\n}","import React from 'react';\nimport WelcomeMessage from './WelcomeMessage'\nimport ConfirmButton from './ConfirmButton';\nimport Page from '../Shared/Page';\nimport CoinGrid from './CoinGrid';\nimport Search from './Search';\nexport default function(){\n    return <Page name = \"settings\"> \n        <WelcomeMessage/> \n        <CoinGrid topSection/>\n        <ConfirmButton/> \n        <Search/>\n        <CoinGrid/>\n    </Page>\n}","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\nexport default function(props){\n    return <AppContext.Consumer>\n        {({coinList, prices, firstVisit}) => {\n            if(!coinList){\n                return <div> Loading Coins </div>\n            }\n            if(!firstVisit && !prices){\n                return <div> Loading Prices </div>\n            }\n            return <div> {props.children} </div>\n        }}\n    </AppContext.Consumer>\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {SelectableTile} from \"../Shared/Tile\";\nimport {fontSize3, fontSizeBig} from \"../Shared/Styles\";\nimport {CoinHeaderGridStyled} from \"../Settings/CoinHeaderGrid\";\nimport {AppContext} from \"../App/AppProvider\";\nimport {greenBoxShadow} from \"../Shared/Styles\";\n\nconst JustifyRight = styled.div`\njustify-self: right;\n`;\nconst JustifyLeft = styled.div`\njustify-self: left;\n`;\n\nconst TickerPrice = styled.div`\n${fontSizeBig}\n`;\n\nconst ChangePct = styled.div`\ncolor: green;\n${props => props.red && css`\ncolor: red;\n`}\n`;\n\nconst numberFormat = number => {\n    return + (number + '').slice(0, 7);\n};\n\nconst PriceTileStyled = styled(SelectableTile)`\n  ${props =>\n    props.compact &&\n    css`\n      display: grid;\n      ${fontSize3}\n      grid-gap: 5px;\n      grid-template-columns: repeat(3, 1fr);\n      justify-items: right;\n    `}\n\n  ${props =>\n    props.currentFavorite &&\n    css`\n      ${greenBoxShadow};\n      pointer-events: none;\n    `}\n`;\n\nfunction ChangePercent({data}){\n    return(\n    <JustifyRight> \n        <ChangePct red={data.CHANGEPCT24HOUR < 0}>\n        {numberFormat(data.CHANGEPCT24HOUR)}% \n        </ChangePct>\n    </JustifyRight>\n    );\n}\n\nfunction PriceTile({sym, data, currentFavorite, setCurrentFavorite}){\n    return (\n        <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\n            <CoinHeaderGridStyled>\n                <div> {sym} </div>\n                <ChangePercent data={data}/>\n            </CoinHeaderGridStyled>\n            <TickerPrice>\n                ${numberFormat(data.PRICE)}\n            </TickerPrice>\n        </PriceTileStyled>\n    );\n}\n\nfunction PriceTileCompact({sym, data, currentFavorite, setCurrentFavorite}){\n    return (\n    <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}>\n        <JustifyLeft> {sym} </JustifyLeft>\n        <ChangePercent data={data}/>\n        <div>\n            ${numberFormat(data.PRICE)}\n        </div>\n    </PriceTileStyled>\n    );\n}\n\nexport default function({ price, index }) {\n  let sym = Object.keys(price)[0];\n  let data = price[sym][\"USD\"];\n  let TileClass = index < 5 ? PriceTile : PriceTileCompact;\n  return (\n    <AppContext.Consumer>\n      {({currentFavorite, setCurrentFavorite}) => \n        <TileClass\n          sym={sym}\n          data={data}\n          currentFavorite={currentFavorite === sym}\n          setCurrentFavorite={() => setCurrentFavorite(sym)}\n        ></TileClass>\n      }\n    </AppContext.Consumer>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport PriceTile from './PriceTile';\n\nconst PriceGrid = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr);\ngrid-gap: 15px;\nmargin-top: 40px;\n`;\n\nexport default function () {\n    return (\n        <AppContext.Consumer>\n            {({prices}) => (\n                <PriceGrid>\n                    {prices.map((price, index) => (\n                    <PriceTile key={`priceTile-${index}`} index={index} price={price}/>\n                    ))}\n                </PriceGrid>\n            )}\n        </AppContext.Consumer>\n    );\n};","import React from 'react';\nimport styled from 'styled-components';\nimport {Tile} from \"../Shared/Tile\";\nimport {AppContext} from \"../App/AppProvider\";\nimport CoinImage from '../Shared/CoinImage';\n\nconst SpotlightName = styled.h2`\ntext-align: center;\n`\n\nexport default function (){\n    return (\n        <AppContext.Consumer>\n            {({currentFavorite, coinList}) => \n            <Tile> \n                <SpotlightName> {coinList[currentFavorite].CoinName} </SpotlightName>\n                <CoinImage spotlight coin={coinList[currentFavorite]}/>\n                </Tile>\n            }\n        </AppContext.Consumer>\n    )\n}","export default function(historical) {\n  return {\n    title: {\n      text: \"\"\n    },\n\n    yAxis: {\n      title: {\n        text: \"Price\"\n      }\n    },\n\n    xAxis: {type: 'datetime',\n      accessibility: {\n        rangeDescription: \"Range: 2010 to 2017\"\n      }\n    },\n\n    legend: {\n      layout: \"vertical\",\n      align: \"right\",\n      verticalAlign: \"middle\"\n    },\n\n    plotOptions: {\n      series: {\n        label: {\n          connectorAllowed: false\n        },\n        pointStart: 2010\n      }\n    },\n\n    series: historical,\n\n    responsive: {\n      rules: [\n        {\n          condition: {\n            maxWidth: 500\n          },\n          chartOptions: {\n            legend: {\n              layout: \"horizontal\",\n              align: \"center\",\n              verticalAlign: \"bottom\"\n            }\n          }\n        }\n      ]\n    }\n  };\n}\n","import {lightTheme} from '../Shared/Styles';\n\nexport default {\n    colors: [\n        '#61d936', \n        '#552ccb', \n        '#1163c9', \n        '#04A1EE', \n        '#086C6E0',\n        '#146B9E', \n        '#F376C1', \n        '#1B2839'],\n    chart: {\n        backgroundColor: lightTheme ? 'white' : '#061a44',\n        borderColor: '#000000',\n        borderWidth: 0,\n        className: 'dark-container',\n        plotBackgroundColor: lightTheme ? 'white' : '#061a44',\n        plotBorderWidth: 0\n    },\n    title: {\n        style: {\n            color: '#C0C0C0',\n            font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n        }\n    },\n    subtitle: {\n        style: {\n            color: '#666666',\n            font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n        }\n    },\n    xAxis: {\n        gridLineColor: '#333333',\n        gridLineWidth: 0,\n        labels: {\n            style: {\n                color: '#A0A0A0'\n            }\n        },\n        lineColor: '#A0A0A0',\n        tickColor: '#A0A0A0',\n        title: {\n            style: {\n                color: '#CCC',\n                fontWeight: 'bold',\n                fontSize: '12px',\n                fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n            }\n        }\n    },\n    yAxis: {\n        gridLineWidth: 0,\n        gridLineColor: '#333333',\n        labels: {\n            style: {\n                color: '#A0A0A0'\n            }\n        },\n        lineColor: '#A0A0A0',\n        minorTickInterval: null,\n        tickColor: '#A0A0A0',\n        tickWidth: 1,\n        title: {\n            style: {\n                color: '#CCC',\n                fontWeight: 'bold',\n                fontSize: '12px',\n                fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n            }\n        }\n    },\n    tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n        style: {\n            color: '#F0F0F0'\n        }\n    },\n    toolbar: {\n        itemStyle: {\n            color: 'silver'\n        }\n    },\n    plotOptions: {\n        line: {\n            dataLabels: {\n                color: '#CCC'\n            },\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        spline: {\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        scatter: {\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        candlestick: {\n            lineColor: 'white'\n        }\n    },\n    legend: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        itemStyle: {\n            font: '9pt Trebuchet MS, Verdana, sans-serif',\n            color: '#A0A0A0'\n        },\n        itemHoverStyle: {\n            color: '#FFF'\n        },\n        itemHiddenStyle: {\n            color: '#444'\n        },\n        title: {\n            style: {\n                color: '#C0C0C0'\n            }\n        }\n    },\n    credits: {\n        enabled: false\n    },\n    labels: {\n        style: {\n            color: '#CCC'\n        }\n    },\n    navigation: {\n        buttonOptions: {\n            symbolStroke: '#DDDDDD',\n            theme: {\n                fill: {\n                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                    stops: [\n                        [0.4, '#606060'],\n                        [0.6, '#333333']\n                    ]\n                },\n                stroke: '#000000'\n            }\n        }\n    },\n    // scroll charts\n    rangeSelector: {\n        buttonTheme: {\n            fill: {\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                stops: [\n                    [0.4, '#888'],\n                    [0.6, '#555']\n                ]\n            },\n            stroke: '#000000',\n            style: {\n                color: '#CCC',\n                fontWeight: 'bold'\n            },\n            states: {\n                hover: {\n                    fill: {\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                        stops: [\n                            [0.4, '#BBB'],\n                            [0.6, '#888']\n                        ]\n                    },\n                    stroke: '#000000',\n                    style: {\n                        color: 'white'\n                    }\n                },\n                select: {\n                    fill: {\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                        stops: [\n                            [0.1, '#000'],\n                            [0.3, '#333']\n                        ]\n                    },\n                    stroke: '#000000',\n                    style: {\n                        color: 'yellow'\n                    }\n                }\n            }\n        },\n        inputStyle: {\n            backgroundColor: '#333',\n            color: 'silver'\n        },\n        labelStyle: {\n            color: 'silver'\n        }\n    },\n    navigator: {\n        handles: {\n            backgroundColor: '#666',\n            borderColor: '#AAA'\n        },\n        outlineColor: '#CCC',\n        maskFill: 'rgba(16, 16, 16, 0.5)',\n        series: {\n            color: '#7798BF',\n            lineColor: '#A6C7ED'\n        }\n    },\n    scrollbar: {\n        barBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0.4, '#888'],\n                [0.6, '#555']\n            ]\n        },\n        barBorderColor: '#CCC',\n        buttonArrowColor: '#CCC',\n        buttonBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0.4, '#888'],\n                [0.6, '#555']\n            ]\n        },\n        buttonBorderColor: '#CCC',\n        rifleColor: '#FFF',\n        trackBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0, '#000'],\n                [1, '#333']\n            ]\n        },\n        trackBorderColor: '#666'\n    }\n};","import styled from 'styled-components';\nimport {backgroundColor2, fontSize2} from \"../Shared/Styles\";\n\nexport default styled.select`\n  ${backgroundColor2};\n  ${fontSize2};\n  color: #1163c9;\n  border: 1px solid;\n  float: right;\n`;","import highchartsConfig from './HighchartsConfig';\nimport React from 'react';\nimport {Tile} from \"../Shared/Tile\";\nimport {AppContext} from \"../App/AppProvider\";\nimport ReactHighcharts from 'react-highcharts';\nimport HighchartsTheme from './HighchartsTheme';\nimport ChartSelect from './ChartSelect';\nReactHighcharts.Highcharts.setOptions(HighchartsTheme);\n\nexport default function() {\n  return (\n    <AppContext.Consumer>\n      {({historical, changeChartSelect}) => \n        <Tile>\n          <ChartSelect\n          defaultValue={\"months\"}\n          onChange={e => changeChartSelect(e.target.value)}\n          >\n            <option value=\"days\"> Days </option>\n            <option value=\"weeks\"> Weeks </option>\n            <option value=\"months\"> Months </option>\n          </ChartSelect>\n          {historical ?\n          <ReactHighcharts config={highchartsConfig(historical)}/>\n          : <div> Loading Historical Data </div>\n          }\n        </Tile>\n      }\n    </AppContext.Consumer>\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Page from '../Shared/Page';\nimport PriceGrid from './PriceGrid';\nimport CoinSpotlight from './CoinSpotlight';\nimport PriceChart from './PriceChart';\n\n\nconst ChartGrid = styled.div`\ndisplay: grid;\nmargin-top: 20px;\ngrid-gap: 15px;\ngrid-template-columns: 1fr 3fr;\n`\n\nexport default function(){\n    return (\n      <Page name=\"dashboard\">\n        <PriceGrid />\n        <ChartGrid>\n          <CoinSpotlight />\n          <PriceChart> Chart goes here </PriceChart>\n        </ChartGrid>\n      </Page>\n    );\n};","import React from 'react';\nimport './App.css';\nimport AppLayout from './AppLayout';\nimport AppBar from './AppBar';\nimport {AppProvider} from './AppProvider';\nimport Setings from '../Settings';\nimport Content from '../Shared/Content';\nimport Dashboard from '../Dashboard';\n\nfunction App() {\n  return (\n    <AppLayout>\n      <AppProvider>\n        <AppBar />\n        <Content>\n          <Setings />\n          <Dashboard />\n        </Content>\n      </AppProvider>\n    </AppLayout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}